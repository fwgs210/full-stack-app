{"version":3,"file":"static\\development\\pages\\user.js","sources":["webpack:///webpack/bootstrap","webpack:///./pages/user.js","webpack:///./src/controllers/Actions.js","webpack:///./src/utils/Input.js","webpack:///./src/utils/globalFunc.js","webpack:///./src/views/components/AddComment/actions.js","webpack:///./src/views/components/AddComment/index.js","webpack:///./src/views/components/ChangePassword/index.js","webpack:///./src/views/components/ChatBox/index.js","webpack:///./src/views/components/Comment/actions.js","webpack:///./src/views/components/Comment/index.js","webpack:///./src/views/components/Dashboard/UserTable.js","webpack:///./src/views/components/Dashboard/actions.js","webpack:///./src/views/components/Dashboard/index.js","webpack:///./src/views/components/ShowComment/actions.js","webpack:///./src/views/components/ShowComment/index.js","webpack:///./src/views/components/UserForm/actions.js","webpack:///./src/views/components/UserForm/index.js","webpack:///./src/views/components/UserPortal/actions.js","webpack:///./src/views/components/UserPortal/index.js","webpack:///./src/views/containers/UserDashboard.js","webpack:///external \"@babel/runtime/regenerator\"","webpack:///external \"@fortawesome/react-fontawesome\"","webpack:///external \"@material-ui/core/MenuItem\"","webpack:///external \"@material-ui/core/Select\"","webpack:///external \"axios\"","webpack:///external \"next/router\"","webpack:///external \"prop-types\"","webpack:///external \"react\"","webpack:///external \"react-placeholder\"","webpack:///external \"react-redux\"","webpack:///external \"styled-components\""],"sourcesContent":[" \t// The module cache\n \tvar installedModules = require('../../../ssr-module-cache.js');\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tvar threw = true;\n \t\ttry {\n \t\t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n \t\t\tthrew = false;\n \t\t} finally {\n \t\t\tif(threw) delete installedModules[moduleId];\n \t\t}\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 5);\n","import UserDashboard from '../src/views/containers/UserDashboard';\r\n\r\nexport default () => (\r\n    <div>\r\n        <UserDashboard />\r\n    </div>\r\n)","export const finishLoading = () => ({\n    type: 'SET_LOADED_TRUE'\n})\n\nexport const startLoading = () => ({\n    type: 'SET_LOADED_FALSE'\n})\n\nexport const setError = errorMessage => ({\n    type: 'SET_ERROR',\n    errorMessage\n})\n\nexport const clearError = () => ({\n    type: 'CLEAR_ERROR'\n})\n\nexport const login = userData => ({\n    type: 'USER_LOGIN',\n    userData\n})\n\nexport const clearInput = () => ({\n    type: 'CLEAR_USER_INPUT'\n})","import styled from 'styled-components'\n\nexport const InputGroup = styled.label`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-between;\n  margin: 0 0 20px;\n  align-items: center;\n`\n\nexport const InputLabel = styled.label`\n  width:100%;\n  display: block;\n  margin: 0 0 10px;\n  color: rgba(0, 0, 0, 0.6);\n  font-size: 12px;\n  font-weight: 500;\n  line-height: 1;\n  text-transform: uppercase;\n  letter-spacing: .2em;\n`\n\nexport const InputField = styled.input`\n  width:100%;\n  outline: none;\n  display: block;\n  background: rgba(0, 0, 0, 0.1);\n  border: 0;\n  border-radius: 4px;\n  box-sizing: border-box;\n  padding: 12px 20px;\n  color: rgba(0, 0, 0, 0.6);\n  font-family: inherit;\n  font-size: inherit;\n  font-weight: 500;\n  line-height: inherit;\n  transition: 0.3s ease;\n`\n\nexport const InputTextarea = styled.textarea`\n    width: 100%;\n    outline: none;\n    display: block;\n    background: rgba(0, 0, 0, 0.1);\n    border: 0;\n    border-radius: 4px;\n    box-sizing: border-box;\n    padding: 12px 20px;\n    color: rgba(0, 0, 0, 0.6);\n    font-family: inherit;\n    font-size: inherit;\n    font-weight: 500;\n    line-height: inherit;\n    transition: 0.3s ease;\n    height: 6rem;\n`\n\nexport const InputButton = styled.button`\n    outline: none;\n    background: #4285F4;\n    width: 100%;\n    border: 0;\n    border-radius: 4px;\n    padding: 12px 20px;\n    color: #FFFFFF;\n    font-family: inherit;\n    font-size: inherit;\n    font-weight: 500;\n    line-height: inherit;\n    text-transform: uppercase;\n    cursor: pointer;\n`\n\nexport const LineButton = styled.a.attrs({ type: 'button' })`\n    width: 100%;\n    background: none;\n    border: none;\n    color: #999;\n    text-decoration: underline;\n    font-size: inherit;\n    font-weight: 500;\n    line-height: inherit;\n    text-transform: uppercase;\n    cursor: pointer;\n    margin: 20px 10px 5px;\n    text-align: center;\n    display: inline-block;\n`\n\nexport const WhiteLink = styled.a.attrs({ type: 'button' })`\n    width: 100%;\n    background: none;\n    border: none;\n    color: #fff;\n    font-size: inherit;\n    font-weight: 100;\n    line-height: inherit;\n    cursor: pointer;\n    margin: 20px 10px 5px;\n    text-align: center;\n    display: inline;\n`","export const stripSpaces = string => string.trim().split(' ').join('');\nexport const confirmPopUp = message => window.confirm(message);\nexport const validatePassword = password => {\n    const upper = /[A-Z]/;\n    const lower = /[a-z]/;\n    const numbers = /[0-9]/;\n    const special = /[ !@#$%^&*()_+\\-=\\[\\]{};':\"\\\\|,.<>\\/?]/;\n    const space = /\\s/g;\n\n    const valid = (!space.test(password) && upper.test(password) && lower.test(password) && numbers.test(password) && special.test(password) && password.length > 7) ? true : false\n\n    return valid\n\n}\nexport const validateEmail = email => {\n    var validate = /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    return validate.test(email);\n}","export const typeComment = comment => ({\n    type: 'INPUT_COMMENT',\n    comment: comment.target.value\n})\n\nexport const clearComment = () => ({\n    type: 'CLEAR_COMMENT'\n})\n\nexport const addComment = newComment => ({\n    type: 'ADD_COMMENT',\n    newComment: newComment\n})","import React from \"react\";\nimport axios from 'axios'\nimport {\n  InputGroup,\n  InputLabel,\n  InputButton,\n  InputTextarea\n} from '../../../utils/Input'\nimport { connect } from 'react-redux';\nimport { typeComment, clearComment, addComment } from './actions'\n\nconst handleSubmit = (comment, token, addComment, clearComment) => {\n  axios.post(`/api/addComment`, {\n    comment\n  }, {\n      headers: { 'Authorization': 'bearer ' + token }\n    }).then( res => {\n        addComment(res.data.payload)\n        clearComment()\n    })\n}\n\nconst AddComment = ({ comment, newComment, token, addComment, clearComment, loggedIn }) => {\n  if (loggedIn) {\n    return (\n      <article>\n        <InputGroup>\n          <InputLabel>New Comment:</InputLabel>\n          <InputTextarea onChange={newComment} value={comment}></InputTextarea>\n        </InputGroup>\n        <InputGroup>\n          <InputButton type=\"button\" onClick={() => handleSubmit(comment, token, addComment, clearComment)}>Post Comment</InputButton>\n        </InputGroup>\n      </article>\n    )\n  }\n\n  return null\n\n};\n\nconst mapStateToProps = state => state.user\n//this method is used to pass state down functions\n\nconst mapDispatchToProps = dispatch => ({ //this method is used to pass function down functions\n  newComment: (comment) => {\n    dispatch(typeComment(comment))\n  },\n  clearComment: () => dispatch(clearComment()),\n  addComment: (newComment) => dispatch(addComment(newComment))\n})\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AddComment);\n","import React from 'react'\nimport styled from 'styled-components'\nimport axios from 'axios'\nimport { LineButton, WhiteLink, InputGroup, InputLabel, InputField, InputButton } from '../../../utils/Input'\nimport { stripSpaces, validatePassword } from '../../../utils/globalFunc'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n\nconst ErrorMessage = styled.div`\n  color: #D31C1D;\n  text-align: center;\n  font-size: .875rem;\n`;\n\nconst FormContainer = styled.form`\n    text-align: left;\n    width: 100%;\n    padding: 1rem;\n    box-shadow: 0 0 8px 2px rgba(65,64,66,.1);\n    margin-bottom: 1.5rem;\n    background-color: #fff;\n`\n\nclass ChangePassword extends React.Component {\n    state = {\n        changingPass: false,\n        currentPass: '',\n        newPass: '',\n        reNewPass: '',\n        userError: false,\n        errorMessage: '',\n        token: '',\n        loggedInAs: ''\n    }\n\n    clearInput = () => this.setState({\n        changingPass: false,\n        currentPass: '',\n        newPass: '',\n        reNewPass: '',\n        userError: false,\n        errorMessage: ''\n    })\n\n    handleChange = (nameToUpdate, value) => {\n        this.setState({\n            [nameToUpdate]: value\n        })\n    }\n\n    changePassword = (e) => {\n        e.preventDefault();\n\n        if (this.state.newPass !== this.state.reNewPass) {\n            this.setState({\n                userError: true,\n                errorMessage: `You passwords don't match`\n            })\n            return null\n        }\n\n        if (!validatePassword(this.state.newPass)) {\n            this.setState({\n                userError: true,\n                errorMessage: `Please make sure your password has uppercase, lowercase letter, number, special character and no space.`\n            })\n            return null\n        } \n\n        axios.post('/api/user/change-password', {\n            userId: this.state.loggedInAs,\n            oldPassword: stripSpaces(this.state.currentPass),\n            newPassword: stripSpaces(this.state.newPass)\n            }, {\n            headers: { 'Authorization': 'bearer ' + this.state.token }\n        }).then(res => {\n            if (res.status === 200) {\n                this.clearInput()\n                window.alert(res.data.message)\n            } else {\n                this.setState({ userError: true, errorMessage: res.data.message })\n            }\n\n        })\n    }\n\n    componentDidMount() {\n        const { loggedInAs, token } = this.props\n        this.setState({\n            loggedInAs,\n            token\n        })\n    }\n    \n\n    render(){\n        return (\n            this.state.changingPass ? (\n                <FormContainer onSubmit={this.changePassword}>\n                    <InputGroup>\n                        <InputLabel>old password</InputLabel>\n                        <InputField value={this.state.currentPass} onChange={(e) => this.handleChange('currentPass', e.target.value)} type=\"password\" required />\n                    </InputGroup>\n                    <InputGroup>\n                        <InputLabel>new password</InputLabel>\n                        <InputField value={this.state.newPass} onChange={(e) => this.handleChange('newPass', e.target.value)} type=\"password\" required />\n                    </InputGroup>\n                    <InputGroup>\n                        <InputLabel>re-type new password</InputLabel>\n                        <InputField value={this.state.reNewPass} onChange={(e) => this.handleChange('reNewPass', e.target.value)} type=\"password\" required />\n                    </InputGroup>\n                    <InputGroup>\n                        <InputButton type=\"submit\">Update</InputButton>\n                        <LineButton onClick={() => this.handleChange('changingPass', false)}>Cancel</LineButton>\n                    </InputGroup>\n                    {this.state.userError ? <ErrorMessage>{this.state.errorMessage}</ErrorMessage> : ''}\n                </FormContainer>\n            ) : (\n                    <WhiteLink onClick={() => this.handleChange('changingPass', true)}>\n                        <FontAwesomeIcon prefix=\"fas\" icon=\"unlock-alt\" /> Change Password\n                    </WhiteLink>\n            )            \n        )\n    }\n} \n\nexport default ChangePassword\n","import React, { Component } from 'react'\nimport axios from 'axios'\nimport styled from 'styled-components'\nimport ReactPlaceholder from 'react-placeholder';\nimport { connect } from 'react-redux';\n\nconst ChatContainer = styled.div`\n    margin-top: 3rem;\n    height:600px;\n    border: 3px solid #eee;\n    overflow-y: scroll;\n`\nconst Chat = styled.div`\n    margin: .5rem 1rem 1.5rem;\n    display: flex;\n    align-items: flex-start;\n\n    .profile {\n        margin-right: 1rem\n    }\n    .message {\n        margin: 0;\n        font-size: .875rem;\n    }\n    .user {\n        margin: 0 0 .375rem;\n        font-weight: bold;\n        font-size: .75rem;\n\n        .time {\n            font-weight: normal;\n        }\n    }\n`\n\nconst ChatForm = styled.form`\n    margin-top: .5rem;\n    background: #fff;\n    border: 3px solid #eee;\n\n    input {\n        outline: none;\n        border: 0;\n        width: 85%;\n        box-sizing: border-box;\n        padding: 12px 20px;\n        color: rgba(0,0,0,0.6);\n        font-family: inherit;\n        font-size: inherit;\n        font-weight: 500;\n        line-height: inherit;\n        -webkit-transition: 0.3s ease;\n        -webkit-transition: 0.3s ease;\n        transition: 0.3s ease;\n    }\n\n    input::placeholder {\n        color: rgba(0,0,0,0.3);\n    }\n\n    button {\n        outline: none;\n        background: #4285F4;\n        width: 15%;\n        border: 0;\n        padding: 12px 20px;\n        color: #FFFFFF;\n        font-family: inherit;\n        font-size: inherit;\n        font-weight: 500;\n        line-height: inherit;\n        text-transform: uppercase;\n        cursor: pointer;\n    }\n`\n\nclass ChatBox extends Component {\n\n  constructor(props) {\n    super(props)\n\n    this.loggedIn = props.loggedIn\n    this.userRole = props.userRole\n    this.loggedInAs = props.loggedInAs\n    this.token = props.token\n    this.loaded = props.loaded\n    this.profileImg = props.profileImg\n  }\n\n  state = {\n    chats: [],\n    newChat: ''\n  }\n\n  loadChats = () => {\n    axios.get('/api/all-chats').then(async res => {\n      if (res.data.payload && res.status === 200) {\n        this.setState({\n            chats: res.data.payload\n        })\n      }\n    })\n  }\n\n  newChat = e => {\n    e.preventDefault()\n    axios.post(`/api/newchat`, {\n        chat: this.state.newChat\n      }, {\n          headers: { 'Authorization': 'bearer ' + this.token }\n        }).then( res => {\n            if(res.status === 201) {\n                this.setState({newChat: '', chats: [ ...this.state.chats, res.data.payload ]})\n            }\n        })\n  }\n\n  handleChange = e => this.setState({newChat: e.target.value})\n\n  convertDate = date => {\n      const newDate = new Date(date)\n      const hours = newDate.getHours() < 10 ? '0' + newDate.getHours() : newDate.getHours()\n      const min = newDate.getMinutes() < 10 ? '0' + newDate.getMinutes() : newDate.getMinutes()\n      return `${hours}:${min}`\n  }\n\n  componentWillReceiveProps(nextProps) {\n    \n    this.userRole = nextProps.userRole\n    this.loggedInAs = nextProps.loggedInAs\n    this.loggedIn = nextProps.loggedIn\n    this.token = nextProps.token\n    this.loaded = nextProps.loaded\n    this.profileImg = nextProps.profileImg\n  }\n\n  componentDidMount() {\n    this.loadChats()\n  }\n\n  render() {\n    if (this.loggedIn) {\n        return (\n            <ReactPlaceholder type='text' rows={10} ready={this.loaded}>\n                <ChatContainer>\n                    {this.state.chats.map(chat => (\n                        <Chat key={chat._id}>\n                            <img width=\"32\" alt=\"Profile Image\" className=\"profile\" src={chat.userId.profileImg} />\n                            <aside>\n                                <p className=\"user\">{chat.userId.username} <span className=\"time\">{this.convertDate(chat.date)}</span></p>\n                                <p className=\"message\">{chat.description}</p>\n                            </aside>\n                        </Chat>\n                    ))}\n                </ChatContainer>\n                <ChatForm onSubmit={this.newChat}>\n                    <input type=\"text\" value={this.state.newChat} onChange={this.handleChange} placeholder=\"enter your message here...\" />\n                    <button type=\"submit\">send</button>\n                </ChatForm>\n            </ReactPlaceholder>\n        )\n    }\n    return null\n  }\n}\n\n\nconst mapStateToProps = state => ({ ...state.user, ...state.loading})\n\n\nexport default connect(mapStateToProps)(ChatBox)\n","export const editingComment = (id, description) => ({\n    type: 'EDITING_COMMENT',\n    id,\n    description\n})\n\nexport const updateComment = () => ({\n    type: 'UPDATE_COMMENT'\n    \n})\n\nexport const deleteComment = id => ({\n    type: 'DELETE_COMMENT',\n    id\n})\n\nexport const typeComment = editingComment => ({\n    type: 'INPUT_EDITING_COMMENT',\n    editingComment: editingComment.target.value\n})","import React from 'react'\nimport axios from 'axios'\nimport PropTypes from 'prop-types'\nimport styled from 'styled-components'\nimport { connect } from 'react-redux';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport {\n  InputGroup,\n  InputButton,\n  InputTextarea\n} from '../../../utils/Input'\nimport { confirmPopUp } from '../../../utils/globalFunc'\nimport { editingComment, typeComment, updateComment, deleteComment } from './actions'\n\nconst CommentContainer = styled.summary`\n  width: 100%;\n  border-bottom: 1px solid #eee;\n  padding: 1rem 0;\n  display:flex;\n  flex-wrap:wrap;\n  margin-top: 2rem;\n`;\n\nconst ContentContainer = styled.div`\n    font-size: 1.25rem;\n    width: 100%;\n    margin-bottom: 1rem;\n    background: #f8f8f8;\n    padding: 15px;\n    border-radius: .5rem;\n`;\n\nconst AuthorContainer = styled.aside`\n  display:flex;\n  align-items:center;\n  justify-content: flex-end;\n  text-align: right;\n  width: 50%;\n  font-size: .875rem;\n  color: rgba(0,0,0,0.6);\n`;\n\nconst IconContainer = styled.aside`\n  display:flex;\n  align-items:center;\n  text-align: left;\n  width: 50%;\n`;\n\nconst UpdateContentContainer = styled.div`\n  width: 100%;\n  padding: 1rem;\n  box-shadow: 0 0 8px 2px rgba(65,64,66,.1);\n  margin-bottom: 1rem;\n`;\n\nconst Icon = styled.span`\n  cursor: pointer;\n  color: #4285F4;\n  padding: .375rem .75rem;\n  border-radius: 100px;\n  border: 1px solid;\n  margin-right: 1rem;\n  text-decoration: none;\n  font-size: 0.875rem;\n\n  &:hover {\n    color:#fff;\n    background-color: #4285F4;\n  }\n`;\n\nconst deleteThisComment = (id, deleteComment) => {\n  if (confirmPopUp(\"Want to delete?\")) {\n    axios.delete(`/api/user-comments/${id}`)\n    deleteComment(id)\n  }\n}\n\nconst updateThisComment = (editingCommentId, editingComment, updateComment) => {\n  axios.put('/api/user-comments/edit', {\n    id: editingCommentId,\n    description: editingComment\n  }).then(updateComment)\n}\n\nconst EditComment = ({ typeComment, editingComment, editingCommentId, updateComment }) => (\n  <UpdateContentContainer>\n    <InputGroup>\n      <InputTextarea onChange={(e) => typeComment(e)} value={editingComment}></InputTextarea>\n    </InputGroup>\n    <InputGroup>\n      <InputButton type=\"button\" onClick={() => updateThisComment(editingCommentId, editingComment, updateComment)}>Update</InputButton>\n    </InputGroup>\n  </UpdateContentContainer>\n)\n\n// EditComment.propTypes = {\n//   handleChange: PropTypes.func.isRequired,\n//   editingComment: PropTypes.string.isRequired,\n//   updateTodo: PropTypes.func.isRequired\n// }\n\nconst Comment = props => {\n  const { deleteComment, updateComment, description, id, userPosted, profileImg, editing, editingComment, editingCommentId, loggedIn, userRole, typeComment, editThisComment } = props\n  \n  return (\n    <CommentContainer key={description}>\n      {\n        editing && editingCommentId === id ? (\n          <EditComment updateComment={updateComment} typeComment={typeComment} editingComment={editingComment} editingCommentId={editingCommentId} />\n        ) : (\n          <ContentContainer>{description}</ContentContainer>\n        )\n      }\n      <IconContainer>\n      {\n          (loggedIn || userRole === 'administrator' ) && !editing  ? (\n          <React.Fragment>\n            <Icon onClick={() => deleteThisComment(id, deleteComment)}><FontAwesomeIcon prefix=\"far\" icon=\"trash-alt\" /> delete</Icon>\n            <Icon onClick={() => editThisComment(id, description)}><FontAwesomeIcon prefix=\"fas\" icon=\"edit\" /> edit</Icon>\n          </React.Fragment>\n      ) : ('')\n    }\n      </IconContainer>\n      <AuthorContainer>\n        <img width=\"32\" src={profileImg ? profileImg : '/assets/images/avatar-default.png'} />&nbsp;&nbsp;By {userPosted}\n      </AuthorContainer>\n    </CommentContainer>\n  )\n}\n\nComment.propTypes = {\n  id: PropTypes.string.isRequired,\n  description: PropTypes.string.isRequired,\n  userPosted: PropTypes.string.isRequired\n}\n\nconst mapStateToProps = state => ({ \n  editing: state.user.editing,\n  editingComment: state.user.editingComment,\n  editingCommentId: state.user.editingCommentId,\n  loggedIn: state.user.loggedIn,\n  userRole: state.user.userRole\n})\n//this method is used to pass state down functions\n\nconst mapDispatchToProps = dispatch => ({ //this method is used to pass function down functions\n  editThisComment: (id, description) => dispatch(editingComment(id, description)),\n  typeComment: editingComment => dispatch(typeComment(editingComment)),\n  updateComment: () => dispatch(updateComment()),\n  deleteComment: id => dispatch(deleteComment(id))\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Comment)\n","import React from 'react'\nimport styled from 'styled-components'\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { LineButton, InputGroup, InputLabel, InputField, InputButton } from '../../../utils/Input'\n\nconst UserTableContainer = styled.div`\n    width:100%;\n`\n\nconst TableContainer = styled.div`\n    width:100%;\n    overflow-x: auto;\n`\n\nconst StyleTable = styled.table`\n    width: 100%;\n    display: table;\n    border-spacing: 0;\n    border-collapse: collapse;\n\n    thead {\n        display: table-header-group;\n    }\n    tbody {\n        display: table-row-group;\n    }\n    tr {\n        color: inherit;\n        height: 48px;\n        display: table-row;\n        outline: none;\n        vertical-align: middle;\n    }\n    td, th {\n        display: table-cell;\n        text-align: left;\n        border-bottom: 1px solid rgba(224, 224, 224, 1);\n        vertical-align: inherit;\n        font-size: .875rem;\n        padding: 0 5px;\n    }\n    th {\n        font-weight: bold;\n        font-size: 1rem;\n    }\n    \n`\n\nconst FormContainer = styled.form`\n    text-align: left;\n    width: 100%;\n    padding: 1rem;\n    box-shadow: 0 0 8px 2px rgba(65,64,66,.1);\n    margin: 1.5rem 0;\n    background-color: #fff;\n`\n\nconst UserEditor = props => {\n\n    const { editingUser,\n        handleChange,\n        updateUser,\n        editingUsername,\n        editingEmail,\n        editingProfileImg,\n        editingRole } = props\n\n    const availableRoles = ['member', 'editor', 'administrator']\n\n    if(editingUser) {\n        return (\n            <FormContainer onSubmit = { updateUser } >\n                <InputGroup>\n                    <InputLabel>User Role</InputLabel>\n                    <Select style={{'padding-left': '16px'}} value={editingRole} onChange={(e) => handleChange('editingRole', e.target.value)}>\n                        {\n                            availableRoles.map(each => <MenuItem value={each} key={each}>{each}</MenuItem>)\n                        }\n                    </Select>\n                </InputGroup>\n                <InputGroup>\n                    <InputLabel>Username</InputLabel>\n                    <InputField value={editingUsername} onChange={(e) => handleChange('editingUsername', e.target.value)} type=\"text\" required />\n                </InputGroup>\n                <InputGroup>\n                    <InputLabel>User Email</InputLabel>\n                    <InputField value={editingEmail} onChange={(e) => handleChange('editingEmail', e.target.value)} type=\"email\" required />\n                </InputGroup>\n                <InputGroup>\n                    <InputLabel>User Profile Image</InputLabel>\n                    <InputField value={editingProfileImg} onChange={(e) => handleChange('editingProfileImg', e.target.value)} type=\"text\" required />\n                </InputGroup>\n                <InputGroup>\n                    <InputButton type=\"submit\">Update User</InputButton>\n                    <LineButton onClick={() => handleChange('editingUser', false)}>Cancel</LineButton>\n                </InputGroup>\n            </FormContainer >\n        )\n    }\n    return null\n}\n\nconst UserTable = props => {\n    const { editingUser,\n            editingUsername,\n            editingEmail,\n            editingProfileImg,\n            editingRole } = props.state\n\n    const { handleChange, updateUser, deleteUser, users } = props\n\n    return (\n        <UserTableContainer>\n            <UserEditor \n                editingUser={editingUser}\n                editingUsername={editingUsername}\n                editingEmail={editingEmail}\n                editingProfileImg={editingProfileImg}\n                editingRole={editingRole}\n                handleChange={handleChange}\n                updateUser={updateUser}\n            />\n            <TableContainer>\n                <StyleTable>\n                    <thead>\n                        <tr>\n                            <th>Avatar</th>\n                            <th>Username</th>\n                            <th>Email</th>\n                            <th>Role</th>\n                            <th></th>\n                            <th></th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        { users.map(user => (\n                            <tr key={user._id}>\n                                <td>\n                                    <img src={user.profileImg} width=\"32\" alt=\"avatar\" />\n                                </td>\n                                <td>\n                                    {user.username}\n                                </td>\n                                <td>\n                                    {user.email}\n                                </td>\n                                <td>\n                                    {user.role}\n                                </td>\n                                <td>\n                                    <LineButton style={{'display': 'inline'}} onClick={() => {\n                                        handleChange('editingUser', true)\n                                        handleChange('editingUserId', user._id)\n                                        handleChange('editingUsername', user.username)\n                                        handleChange('editingEmail', user.email)\n                                        handleChange('editingProfileImg', user.profileImg)\n                                        handleChange('editingRole', user.role)\n                                        }}>\n                                        Edit\n                                    </LineButton>\n                                </td>\n                                <td>\n                                    <LineButton style={{ 'display': 'inline' }} onClick={() => {\n                                        deleteUser(user._id)\n                                    }}>\n                                        Delete\n                                    </LineButton>\n                                </td>\n                            </tr>\n                        )) }\n                    </tbody>\n                </StyleTable>\n            </TableContainer>\n        </UserTableContainer>\n    )\n}\nexport default UserTable\n","export const loadUsers = allUsers => {\n    return {\n        type: 'LOAD_USERS',\n        allUsers\n    }\n}","import React, { Component } from 'react'\nimport axios from 'axios'\nimport styled from 'styled-components'\nimport UserTable from './UserTable'\nimport ChatBox from '../ChatBox'\nimport ShowComments from '../ShowComment'\nimport AddComment from '../AddComment'\nimport { confirmPopUp } from '../../../utils/globalFunc'\nimport { connect } from 'react-redux';\nimport { loadUsers } from './actions'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { LineButton } from '../../../utils/Input'\n\n\nconst NewPostContainer = styled.div`\n  margin-top: 3rem;\n`;\n\nconst UserApp = styled.section`\n    display: flex;\n    flex-wrap: wrap;\n    min-height: 400px;\n    padding: 2rem 0;\n    box-sizing: border-box;\n\n    .app {\n        box-shadow: 0 3px 3px 0 rgba(203,203,203,0.5);\n        width: 32%;\n        margin: calc(4% / 6);\n        height: 8rem;\n        display: flex;\n        flex-direction: column;\n        border-radius: 6px;\n        justify-content: center;\n        align-items: center;\n        border: 0;\n        border-top: 1px solid #F0F0F0;\n        text-decoration: none;\n        color: #333;\n        font-size: 1rem;\n        background-color: #fff;\n\n        &:hover {\n            box-shadow: 0 3px 30px 0 rgba(203,203,203,1);\n        }\n    }\n    .app-icon {\n        font-size: 2.5rem;\n        color: #4285F4;\n        margin-bottom: 10px;\n    }\n`\n\nclass Dashboard extends Component {\n\n    constructor(props) {\n        super(props);\n        this.token = props.user.token\n        this.userRole = props.user.userRole\n        this.users = props.admin.users\n        this.loggedInAs = props.user.loggedInAs\n    }\n\n    state = {\n        editingUser: false,\n        editingUserId: '',\n        editingUsername: '', \n        editingEmail: '', \n        editingProfileImg: '', \n        editingRole: '' ,\n        chatroom: false,\n        commentsBoard: false\n    }\n    \n    componentWillReceiveProps(nextProps) {\n        this.token = nextProps.user.token\n        this.userRole = nextProps.user.userRole\n        this.users = nextProps.admin.users\n        this.loggedInAs = nextProps.user.loggedInAs\n\n        if (this.userRole === 'administrator' && this.token) {\n            this.loadUsers()\n        }\n    }\n\n    handleChange = (nameToUpdate, value) => {\n        this.setState({\n            [nameToUpdate]: value\n        })\n    }\n\n    clearInput = () => {\n        this.setState({\n            editingUser: false,\n            editingUserId: '',\n            editingUsername: '',\n            editingEmail: '',\n            editingProfileImg: '',\n            editingRole: ''\n        })\n    }\n\n    updateUser = (e) => {\n        e.preventDefault();\n        axios.put(`/api/users/${this.state.editingUserId}`, {\n            username: this.state.editingUsername, \n            email: this.state.editingEmail, \n            profileImg: this.state.editingProfileImg, \n            role: this.state.editingRole\n        }, {\n            headers: { 'Authorization': 'bearer ' + this.token }\n        }).then(res => {\n            if (res.status === 200) {\n                this.clearInput()\n                window.alert(res.data.message)\n                this.loadUsers()\n            } else {\n                console.log(\"error\", res)\n            }\n        })\n    }\n\n    deleteUser = (UserId) => {\n        if (confirmPopUp(\"Are you sure?\")) {\n            axios.delete(`/api/users/${UserId}`, {\n                headers: { 'Authorization': 'bearer ' + this.token }\n            }).then(res => {\n                if (res.status === 200) {\n                    window.alert(res.data.message)\n                    this.loadUsers()\n                } else {\n                    console.log(\"error\", res)\n                }\n            })\n        }\n    }\n    \n\n    loadUsers = () => {\n        axios.get('/api/users', {\n            headers: { 'Authorization': 'bearer ' + this.token }\n        }).then(res => {\n            if (res.status === 200) {\n                this.props.dispatch(loadUsers(res.data.users))\n            } else {\n                console.log(\"error\", res)\n            }\n        })\n    }\n\n    render() {\n        \n        if (this.userRole === 'administrator') {\n            return (\n                <article className=\"admin-dashboard\">\n                    <UserTable state={this.state} users={this.users} handleChange={this.handleChange} updateUser={this.updateUser} deleteUser={this.deleteUser} />\n                </article>\n            );\n        }\n        if (this.userRole !== '') {\n            return (\n                <section className=\"user-dashboard\">\n                    {\n                        this.state.chatroom ? (\n                            <React.Fragment>\n                                <LineButton onClick={() => this.setState({chatroom: false, commentsBoard: false})}>back to dashboard</LineButton>\n                                <ChatBox />\n                            </React.Fragment>\n                        ) : this.state.commentsBoard ? (\n                            <React.Fragment>\n                                <LineButton onClick={() => this.setState({chatroom: false, commentsBoard: false})}>back to dashboard</LineButton>\n                                <ShowComments />\n                                <NewPostContainer>\n                                    <AddComment />\n                                </NewPostContainer>\n                            </React.Fragment>\n                        ) : (\n                            <UserApp>\n                                <button onClick={() => this.setState({chatroom: false, commentsBoard: true})} className=\"app\">\n                                    <FontAwesomeIcon prefix=\"fas\" icon=\"edit\" className=\"app-icon\" />\n                                    Comments Board\n                                </button>\n                                <button onClick={() => this.setState({chatroom: true, commentsBoard: false})} className=\"app\">\n                                    <FontAwesomeIcon prefix=\"far\" icon=\"comments\" className=\"app-icon\" />\n                                    Chatroom\n                                </button>\n                            </UserApp>\n                        )\n                    }\n                </section>\n            )\n        }\n        return null\n    }\n\n\n};\n\nconst mapStateToProps = state => state\n\nexport default connect(mapStateToProps)(Dashboard);\n","export const loadComments = allComments => {\n    return {\n        type: 'LOAD_COMMENTS',\n        allComments\n    }\n}","import React, { Component } from 'react'\nimport axios from 'axios'\nimport ReactPlaceholder from 'react-placeholder';\nimport Comment from '../Comment'\nimport { LineButton } from '../../../utils/Input'\nimport { connect } from 'react-redux';\nimport { loadComments } from './actions';\nimport { startLoading, finishLoading, setError, clearError } from '../../../controllers/Actions'\n\nclass ShowComments extends Component {\n\n  constructor(props) {\n    super(props)\n\n    this.allComments = props.allComments\n    this.userRole = props.userRole\n    this.loadingStart = props.loadingStart\n    this.loadingEnd = props.loadingEnd\n    this.loadComments = props.loadComments\n    this.loggedInAs = props.loggedInAs\n    this.loggedIn = props.loggedIn\n    this.token = props.token\n    this.clearError = props.clearError\n    this.setError = props.setError\n    this.loaded = props.loaded\n  }\n\n  state = {\n    displayComments: 5\n  }\n\n  loadAllComments = () => {\n    this.loadingStart();\n\n    axios.get('/api/all-comments').then(async res => {\n      if (res.data.payload && res.status === 200) {\n        this.allComments = res.data.payload\n        await this.loadComments(res.data.payload)\n        \n        this.loadingEnd();\n      }\n      else {\n        this.setError('Server Error')\n        this.loadingEnd()\n      }\n    })\n  }\n\n  loadUserComments = () => {\n    this.loadingStart();\n\n    axios.post('/api/user-comments', {}, {\n      headers: { 'Authorization': 'bearer ' + this.token }\n    }).then(async res => {\n      if (res.data.payload && res.status === 200) {\n        this.allComments = res.data.payload\n        await this.loadComments(res.data.payload)\n\n        this.loadingEnd();\n      }\n      else {\n        this.setError('Server Error')\n        this.loadingEnd()\n      }\n    })\n  }\n\n  componentDidMount() {\n    if (!window.sessionStorage['token']) {\n      this.loadAllComments()\n    }\n    if(this.loggedIn) {\n      this.loadUserComments()\n    }\n  }\n\n  componentWillReceiveProps(nextProps) {\n    \n    this.allComments = nextProps.allComments\n    this.loggedIn = nextProps.loggedIn\n    this.userRole = nextProps.userRole\n    this.loggedInAs = nextProps.loggedInAs\n    this.token = nextProps.token\n    this.loaded = nextProps.loaded\n\n  }\n\n  render() {\n    return (\n      <ReactPlaceholder type='media' rows={5} ready={this.loaded}>\n        {this.allComments.slice(0, this.state.displayComments).map(comment => (\n          <Comment\n            description={comment.description}\n            profileImg={comment.userId.profileImg ? comment.userId.profileImg : ''}\n            id={comment._id}\n            key={comment._id}\n            userPosted={comment.userId.username}\n          />\n        ))}\n        {this.state.displayComments >= this.allComments.length ? '' : <LineButton onClick={() => {\n          this.setState({\n            displayComments: this.state.displayComments + 5\n          })\n        }}>Load More</LineButton>}\n      </ReactPlaceholder>\n    )\n  }\n}\n\n\nconst mapStateToProps = state => ({ ...state.user, ...state.loading})\n\nconst mapDispatchToProps = dispatch => ({ //this method is used to pass function down functions\n  loadComments: allComments => dispatch(loadComments(allComments)),\n  loadingStart: () => dispatch(startLoading()),\n  loadingEnd: () => dispatch(finishLoading()),\n  setError: errorMessage => dispatch(setError(errorMessage)),\n  clearError: () => dispatch(clearError())\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ShowComments)\n","export const login = userData => ({\n    type: 'USER_LOGIN',\n    userData\n})\n\nexport const logout = () => ({\n    type: 'USER_LOGOUT'\n})\n\nexport const typeUsername = username => ({\n    type: 'INPUT_USERNAME',\n    username: username.target.value\n})\n\nexport const typePassword = password => ({\n    type: 'INPUT_PASSWORD',\n    password: password.target.value\n})\n\nexport const typeConfirmPassword = rePassword => ({\n    type: 'INPUT_CONFIRM_PASSWORD',\n    rePassword: rePassword.target.value\n})\n\nexport const typeEmail = email => ({\n    type: 'INPUT_EMAIL',\n    email: email.target.value\n})\n\nexport const chooseProfile = profileImg => ({\n    type: 'INPUT_PROFILE_IMAGE',\n    profileImg\n})\n\nexport const setRegistering = bool => ({\n    type: 'SET_REGISTERING',\n    registering: bool\n})\n\nexport const setForgetPass = bool => ({\n    type: 'SET_FORGETPASS',\n    forgetPass: bool\n})","import React, { Component } from 'react'\r\nimport axios from 'axios'\r\nimport styled from 'styled-components'\r\nimport Router from 'next/router'\r\nimport {\r\n    InputGroup,\r\n    InputLabel,\r\n    InputField,\r\n    InputButton,\r\n    LineButton\r\n} from '../../../utils/Input'\r\nimport { connect } from 'react-redux';\r\nimport {\r\n    login,\r\n    logout,\r\n    typeUsername,\r\n    typePassword,\r\n    typeConfirmPassword,\r\n    typeEmail,\r\n    chooseProfile,\r\n    setRegistering,\r\n    setForgetPass\r\n} from './actions'\r\nimport { loadComments } from '../ShowComment/actions';\r\nimport { setError, startLoading, finishLoading, clearError, clearInput } from '../../../controllers/Actions'\r\nimport { stripSpaces, validatePassword, validateEmail } from '../../../utils/globalFunc'\r\n\r\nconst UserLogin = styled.div`\r\n  width: 100%;\r\n  max-width: 450px;\r\n  margin: 40px auto 0;\r\n`;\r\n\r\nconst RadioOption = styled.span`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  flex-wrap:wrap;\r\n  align-items: center;\r\n\r\n  [type=\"radio\"] {\r\n      margin-top: .5rem;\r\n  }\r\n\r\n  img {\r\n      width: 48px;\r\n  }\r\n`;\r\n\r\nconst ErrorMessage = styled.div`\r\n  color: #D31C1D;\r\n  text-align: center;\r\n  font-size: .875rem;\r\n`;\r\n\r\nclass UserForm extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        //function\r\n        this.login = props.login\r\n        this.logout = props.logout\r\n        this.clearInput = props.clearInput\r\n        this.setError = props.setError\r\n        this.clearError = props.clearError\r\n        this.loadingStart = props.loadingStart\r\n        this.loadingEnd = props.loadingEnd\r\n        this.typeUsername = props.typeUsername\r\n        this.typePassword = props.typePassword\r\n        this.typeConfirmPassword = props.typeConfirmPassword\r\n        this.typeEmail = props.typeEmail\r\n        this.chooseProfile = props.chooseProfile\r\n        this.setRegistering = props.setRegistering\r\n        this.setForgetPass = props.setForgetPass\r\n        this.loadComments = props.loadComments\r\n\r\n        //data\r\n        this.forgetPass = props.forgetPass\r\n        this.registering = props.registering\r\n        this.username = props.username\r\n        this.email = props.email\r\n        this.password = props.password\r\n        this.rePassword = props.rePassword\r\n        // this.token = props.token\r\n        this.profileImg = props.profileImg\r\n        this.loggedInAs = props.loggedInAs\r\n        this.loggedIn = props.loggedIn\r\n        this.userRole = props.userRole\r\n        this.loaded = props.loaded\r\n        this.errorMessage = props.errorMessage\r\n    }\r\n\r\n    sessionLogin = () => {\r\n        this.loadingStart();\r\n        const token = window.sessionStorage['token']\r\n        axios.post('/api/login/sso', {}, {\r\n            headers: { 'Authorization': 'bearer ' + token }\r\n        }).then(async res => {\r\n            if (res.status === 200) {\r\n                const { _id, profileImg, role, username } = res.data.user\r\n                await this.login({\r\n                    username,\r\n                    loggedInAs: _id,\r\n                    token,\r\n                    profileImg,\r\n                    userRole: role\r\n                })\r\n                this.loadAllComments()\r\n                this.clearInput()\r\n                this.loadingEnd()\r\n                role === 'administrator' ? Router.push('/admin', `/admin/${_id}`) : Router.push(`/user`, `/user/${_id}`)\r\n            } else {\r\n                this.setError(res.data.message)\r\n                this.loadingEnd()\r\n            }\r\n        })\r\n    }\r\n\r\n    userLogin = e => {\r\n        e.preventDefault();\r\n        axios.post('/api/login', {\r\n            username: stripSpaces(this.username),\r\n            password: stripSpaces(this.password)\r\n        }).then(async res => {\r\n            if (res.status === 200) {\r\n                const { _id, profileImg, role, username } = res.data.user\r\n                window.sessionStorage.setItem('token', res.data.token);\r\n                await this.login({\r\n                    username,\r\n                    loggedInAs: _id,\r\n                    token: res.data.token,\r\n                    profileImg,\r\n                    userRole: role\r\n                })\r\n                this.loadAllComments()\r\n                this.clearInput()\r\n                this.clearError()\r\n                role === 'administrator' ? Router.push('/admin', `/admin/${_id}`) : Router.push(`/user`, `/user/${_id}`)\r\n            } else {\r\n                this.setError(res.data.message)\r\n            }\r\n        })\r\n    }\r\n\r\n    createNewUser = e => {\r\n        e.preventDefault()\r\n        if (this.password !== this.rePassword) {\r\n            this.setError(`You passwords don't match`)\r\n            return null\r\n        }\r\n        if (!validatePassword(this.password)) {\r\n            this.setError(`Please make sure your password has uppercase, lowercase letter, number, special character and no space.`)\r\n            return null\r\n        }\r\n        if (!validateEmail(this.email)) {\r\n            this.setError(`this email address ${this.email} is not valid.`)\r\n            return null\r\n        }\r\n        this.loadingStart()\r\n        axios.post('/api/newuser', {\r\n            username: stripSpaces(this.username),\r\n            email: stripSpaces(this.email),\r\n            password: stripSpaces(this.password),\r\n            profileImg: this.profileImg\r\n        }).then(async res => {\r\n            if (res.status === 200) {\r\n                const { _id, role, profileImg } = res.data.user\r\n                await this.login({\r\n                    loggedInAs: _id,\r\n                    token: res.data.token,\r\n                    profileImg,\r\n                    userRole: role\r\n                })\r\n                this.loadAllComments()\r\n                window.sessionStorage.setItem('token', res.data.token);\r\n                this.clearInput()\r\n                this.clearError()\r\n                this.loadingEnd()\r\n                Router.push(`/userdashboard?userId=${_id}`, `/user/${_id}`)\r\n            } else {\r\n                this.setError(res.data.message)\r\n                this.loadingEnd()\r\n            }\r\n        })\r\n    }\r\n\r\n\r\n    forgetPassRequest = e => {\r\n        e.preventDefault()\r\n        this.loadingStart()\r\n        axios.post('/api/retrieve-user-info', {\r\n            email: stripSpaces(this.email)\r\n        }).then(res => {\r\n            if (res.status === 200) {\r\n                this.setError(res.data.message)\r\n                this.clearInput()\r\n                this.loadingEnd()\r\n            }\r\n            if (res.status === 203) {\r\n                this.setError(res.data.message)\r\n                this.loadingEnd()\r\n            }\r\n        })\r\n    }\r\n\r\n    loadAllComments = () => {\r\n        this.loadingStart();\r\n        axios.get('/api/all-comments').then(async res => {\r\n            if (res.data.payload && res.status === 200) {\r\n                await this.loadComments(res.data.payload)\r\n            }\r\n            else {\r\n                this.setError('Server Error')\r\n                this.loadingEnd()\r\n            }\r\n        })       \r\n    }\r\n\r\n    componentDidMount() {\r\n        if (window.sessionStorage['token']) {\r\n            this.sessionLogin()\r\n        }\r\n        console.log('mounted')\r\n    }\r\n    \r\n\r\n    componentWillReceiveProps(nextProps) {\r\n\r\n        this.forgetPass = nextProps.forgetPass\r\n        this.registering = nextProps.registering\r\n        this.username = nextProps.username\r\n        this.email = nextProps.email\r\n        this.password = nextProps.password\r\n        this.rePassword = nextProps.rePassword\r\n        // this.token = nextProps.token\r\n        this.profileImg = nextProps.profileImg\r\n        this.loggedInAs = nextProps.loggedInAs\r\n        this.loggedIn = nextProps.loggedIn \r\n        this.userRole = nextProps.userRole\r\n        this.loaded = nextProps.loaded\r\n        this.errorMessage = nextProps.errorMessage\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        if (this.registering) {\r\n            return (\r\n                <React.Fragment>\r\n                    <UserLogin>\r\n                        <form onSubmit={e => this.createNewUser(e)}>\r\n                            <InputGroup>\r\n                                <InputLabel>choose your avatar</InputLabel>\r\n                                <RadioOption><img alt=\"avatar1\" src='/assets/images/avatar-default.png' /><input type=\"radio\" name=\"selectMyAvatar\" onChange={() => this.chooseProfile('/static/assets/images/avatar-default.png')} /></RadioOption>\r\n                                <RadioOption><img alt=\"avatar2\" src='/assets/images/avatar-yellow.png' /><input type=\"radio\" name=\"selectMyAvatar\" onChange={() => this.chooseProfile('/static/assets/images/avatar-yellow.png')} /></RadioOption>\r\n                                <RadioOption><img alt=\"avatar3\" src='/assets/images/avatar-glasses-1.png' /><input type=\"radio\" name=\"selectMyAvatar\" onChange={() => this.chooseProfile('/static/assets/images/avatar-glasses-1.png')} /></RadioOption>\r\n                                <RadioOption><img alt=\"avatar4\" src='/assets/images/avatar-glasses-2.png' /><input type=\"radio\" name=\"selectMyAvatar\" onChange={() => this.chooseProfile('/static/assets/images/avatar-glasses-2.png')} /></RadioOption>\r\n                                <RadioOption><img alt=\"avatar5\" src='/assets/images/avatar-beared.png' /><input type=\"radio\" name=\"selectMyAvatar\" onChange={() => this.chooseProfile('/static/assets/images/avatar-beared.png')} /></RadioOption>\r\n                                <RadioOption><img alt=\"avatar6\" src='/assets/images/avatar-brown.png' /><input type=\"radio\" name=\"selectMyAvatar\" onChange={() => this.chooseProfile('/static/assets/images/avatar-brown.png')} /></RadioOption>\r\n                            </InputGroup>\r\n                            <InputGroup>\r\n                                <InputLabel>username</InputLabel>\r\n                                <InputField value={this.username} onChange={this.typeUsername} type=\"text\" required />\r\n                            </InputGroup>\r\n                            <InputGroup>\r\n                                <InputLabel>email</InputLabel>\r\n                                <InputField value={this.email} onChange={this.typeEmail} type=\"email\" required />\r\n                            </InputGroup>\r\n                            <InputGroup>\r\n                                <InputLabel>password</InputLabel>\r\n                                <InputField value={this.password} onChange={this.typePassword} type=\"password\" required />\r\n                            </InputGroup>\r\n                            <InputGroup>\r\n                                <InputLabel>Re-type password</InputLabel>\r\n                                <InputField value={this.rePassword} onChange={this.typeConfirmPassword} type=\"password\" required />\r\n                            </InputGroup>\r\n                            <InputGroup>\r\n                                <InputButton type=\"submit\">Register</InputButton>\r\n                                <LineButton onClick={() => this.setRegistering(false)}>Login</LineButton>\r\n                            </InputGroup>\r\n                        </form>\r\n                    </UserLogin>\r\n                    <ErrorMessage>{this.errorMessage}</ErrorMessage>\r\n                </React.Fragment>\r\n            )\r\n        }\r\n\r\n        if (this.forgetPass) {\r\n            return (\r\n                <React.Fragment>\r\n                    <UserLogin>\r\n                        <form onSubmit={(e) => this.forgetPassRequest(e)}>\r\n                            <InputGroup>\r\n                                <InputLabel>email</InputLabel>\r\n                                <InputField value={this.email} onChange={this.typeEmail} type=\"email\" required />\r\n                            </InputGroup>\r\n                            <InputGroup>\r\n                                <InputButton type=\"submit\">Submit</InputButton>\r\n                                <LineButton onClick={() => this.setForgetPass(false)}>Login</LineButton>\r\n                            </InputGroup>\r\n                        </form>\r\n                    </UserLogin>\r\n                    <ErrorMessage>{this.errorMessage}</ErrorMessage>\r\n                </React.Fragment>            \r\n            )\r\n        }\r\n\r\n        if(!this.loggedIn) {\r\n            return (\r\n                <React.Fragment>\r\n                    <UserLogin>\r\n                        <form onSubmit={e => this.userLogin(e)}>\r\n                            <InputGroup>\r\n                                <InputLabel>username</InputLabel>\r\n                                <InputField value={this.username} onChange={this.typeUsername} type=\"text\" required />\r\n                            </InputGroup>\r\n                            <InputGroup>\r\n                                <InputLabel>password</InputLabel>\r\n                                <InputField value={this.password} onChange={this.typePassword} type=\"password\" required />\r\n                            </InputGroup>\r\n                            <InputGroup>\r\n                                <InputButton type=\"submit\">login</InputButton>\r\n                                <LineButton onClick={() => this.setRegistering(true)}>Register here</LineButton>\r\n                                <LineButton onClick={() => this.setForgetPass(true)}>forgot password?</LineButton>\r\n                            </InputGroup>\r\n                        </form>\r\n                    </UserLogin>\r\n                    <ErrorMessage>{this.errorMessage}</ErrorMessage>\r\n                </React.Fragment>\r\n            )\r\n        }\r\n\r\n        return null\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({ ...state.user, ...state.loading })\r\n//this method is used to pass state down functions\r\n\r\nconst mapDispatchToProps = dispatch => ({ //this method is used to pass function down functions\r\n    login: userData => dispatch(login(userData)),\r\n    logout: () => dispatch(logout()),\r\n    loadComments: allComments => dispatch(loadComments(allComments)),\r\n    typeUsername: username => dispatch(typeUsername(username)),\r\n    typePassword: password => dispatch(typePassword(password)),\r\n    typeConfirmPassword: rePassword => dispatch(typeConfirmPassword(rePassword)),\r\n    typeEmail: email => dispatch(typeEmail(email)),\r\n    chooseProfile: profileImg => dispatch(chooseProfile(profileImg)),\r\n    clearInput: () => dispatch(clearInput()),\r\n    setError: errorMessage => dispatch(setError(errorMessage)),\r\n    clearError: () => dispatch(clearError()),\r\n    loadingStart: () => dispatch(startLoading()),\r\n    loadingEnd: () => dispatch(finishLoading()),\r\n    setRegistering: bool => dispatch(setRegistering(bool)), \r\n    setForgetPass: bool => dispatch(setForgetPass(bool))\r\n})\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(UserForm)","export const logout = () => ({\n    type: 'USER_LOGOUT'\n})","import React from 'react'\nimport styled from 'styled-components'\nimport Router from 'next/router'\nimport ChangePassword from '../ChangePassword'\nimport { WhiteLink } from '../../../utils/Input'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { connect } from 'react-redux';\nimport { confirmPopUp } from '../../../utils/globalFunc'\nimport { logout } from './actions'\n\nconst UserPortalContainer = styled.summary`\n  width: 100%;\n  border-bottom: 1px solid #eee;\n  padding: 1rem 0;\n  display:flex;\n  flex-wrap:wrap;\n  justify-content: space-between;\n  align-items: center;\n  background: #34495e;\n  border-radius: .5rem;\n  padding: 1rem;\n`;\n\nconst LeftPanel = styled.aside` \n  display:flex;\n  align-items: center;\n  width: 50%;\n  color:#fff;\n\n  img {\n      margin-right: 10px;\n  }\n\n  @media all and (max-width:640px) {\n    width: 100%;\n    justify-content: left;\n    margin-bottom: 1.5rem;\n  }\n`;\n\nconst RightPanel = styled.aside`\n  width: 50%;\n  text-align:right;\n\n  @media all and (max-width:640px) {\n    width: 100%;\n    text-align:left;\n  }\n`;\n\nconst userLogout = dispatch => {\n    if (confirmPopUp(\"Are you sure you want to logout?\")) {\n        Router.push(`/`)\n        dispatch(logout())\n        window.sessionStorage.setItem('token', '');\n    }\n}\n\nconst UserPortal = props => {\n    const { dispatch, loggedInAs, loggedIn, profileImg, username, token } = props;\n\n    if (loggedInAs && loggedIn) {\n        return (\n            <UserPortalContainer>\n                <LeftPanel>\n                    <img width=\"64\" alt=\"Profile Image\" src={profileImg ? profileImg : '/assets/images/avatar-default.png'} />\n                    <h3>{username}</h3>\n                </LeftPanel>\n                <RightPanel>\n                    <ChangePassword loggedInAs={loggedInAs} token={token} />\n                    <WhiteLink onClick={() => userLogout(dispatch)}>\n                        <FontAwesomeIcon prefix=\"fas\" icon=\"sign-out-alt\" /> Logout\n                    </WhiteLink>\n                </RightPanel>\n            </UserPortalContainer>\n        )\n    }\n\n    return null\n}\n\nconst mapStateToProps = state => state.user\n\nexport default connect(mapStateToProps)(UserPortal)\n","import React from 'react'\nimport UserPortal from '../components/UserPortal'\nimport UserForm from '../components/UserForm'\nimport Dashboard from '../components/Dashboard'\n\nconst UserDashboard = () => (\n    <React.Fragment>\n        <UserForm />\n        <UserPortal />\n        <Dashboard />\n    </React.Fragment>\n)\n\nexport default UserDashboard\n","module.exports = require(\"@babel/runtime/regenerator\");","module.exports = require(\"@fortawesome/react-fontawesome\");","module.exports = require(\"@material-ui/core/MenuItem\");","module.exports = require(\"@material-ui/core/Select\");","module.exports = require(\"axios\");","module.exports = require(\"next/router\");","module.exports = require(\"prop-types\");","module.exports = require(\"react\");","module.exports = require(\"react-placeholder\");","module.exports = require(\"react-redux\");","module.exports = require(\"styled-components\");"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;ACxFA;AAEA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFA;;;;;;;;;;;;ACFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAIA;AAAA;AACA;AADA;AAAA;AAIA;AAAA;AACA;AACA;AAFA;AAAA;AAKA;AAAA;AACA;AADA;AAAA;AAIA;AAAA;AACA;AACA;AAFA;AAAA;AAKA;AAAA;AACA;AADA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACtBA;AAEA;AAQA;AAYA;AAiBA;AAkBA;AAgBA;AAAA;AAAA;AAgBA;AAAA;AAAA;;;;;;;;;;;;ACzFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACjBA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAFA;AAAA;AAKA;AAAA;AACA;AADA;AAAA;AAIA;AAAA;AACA;AACA;AAFA;AAAA;;;;;;;;;;;;;;;;;;;;;;ACTA;AACA;AACA;AAMA;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;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;;;;;;;;;;;;;;;;;;;ACnFA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAJA;AACA;AAOA;;;;;;;;;;;;;;;;;;;;;;;ACbA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;A","sourceRoot":""}