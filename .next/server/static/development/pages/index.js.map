{"version":3,"file":"static\\development\\pages\\index.js","sources":["webpack:///webpack/bootstrap","webpack:///./pages/index.js","webpack:///./src/controllers/Actions.js","webpack:///./src/utils/Input.js","webpack:///./src/utils/globalFunc.js","webpack:///./src/views/components/Comment/actions.js","webpack:///./src/views/components/Comment/index.js","webpack:///./src/views/components/Loader/index.js","webpack:///./src/views/components/ShowComment/actions.js","webpack:///./src/views/components/ShowComment/index.js","webpack:///./src/views/components/UserForm/actions.js","webpack:///./src/views/components/UserForm/index.js","webpack:///./src/views/containers/Home.js","webpack:///external \"@babel/runtime/regenerator\"","webpack:///external \"@fortawesome/react-fontawesome\"","webpack:///external \"@material-ui/core/FormControlLabel\"","webpack:///external \"@material-ui/core/FormGroup\"","webpack:///external \"@material-ui/core/LinearProgress\"","webpack:///external \"@material-ui/core/Switch\"","webpack:///external \"@material-ui/core/styles\"","webpack:///external \"axios\"","webpack:///external \"next/router\"","webpack:///external \"prop-types\"","webpack:///external \"react\"","webpack:///external \"react-redux\"","webpack:///external \"styled-components\""],"sourcesContent":[" \t// The module cache\n \tvar installedModules = require('../../../ssr-module-cache.js');\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tvar threw = true;\n \t\ttry {\n \t\t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n \t\t\tthrew = false;\n \t\t} finally {\n \t\t\tif(threw) delete installedModules[moduleId];\n \t\t}\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 3);\n","import Home from '../src/views/containers/Home';\r\n\r\nexport default () => (\r\n    <div>\r\n        <Home />\r\n    </div>\r\n)","export const finishLoading = () => ({\n    type: 'SET_LOADED_TRUE'\n})\n\nexport const startLoading = () => ({\n    type: 'SET_LOADED_FALSE'\n})\n\nexport const setError = errorMessage => ({\n    type: 'SET_ERROR',\n    errorMessage\n})\n\nexport const clearError = () => ({\n    type: 'CLEAR_ERROR'\n})\n\nexport const login = userData => ({\n    type: 'USER_LOGIN',\n    userData\n})\n\nexport const clearInput = () => ({\n    type: 'CLEAR_USER_INPUT'\n})","import styled from 'styled-components'\n\nexport const InputGroup = styled.label`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-between;\n  margin: 0 0 20px;\n  align-items: center;\n  flex-direction: column;\n`\n\nexport const InputLabel = styled.label`\n  width:100%;\n  display: block;\n  margin: 0 0 10px;\n  color: rgba(0, 0, 0, 0.6);\n  font-size: 12px;\n  font-weight: 500;\n  line-height: 1;\n  text-transform: uppercase;\n  letter-spacing: .2em;\n`\n\nexport const InputField = styled.input`\n  width:100%;\n  outline: none;\n  display: block;\n  background: rgba(0, 0, 0, 0.1);\n  border: 0;\n  border-radius: 4px;\n  box-sizing: border-box;\n  padding: 12px 20px;\n  color: rgba(0, 0, 0, 0.6);\n  font-family: inherit;\n  font-size: inherit;\n  font-weight: 500;\n  line-height: inherit;\n  transition: 0.3s ease;\n`\n\nexport const InputTextarea = styled.textarea`\n    width: 100%;\n    outline: none;\n    display: block;\n    background: rgba(0, 0, 0, 0.1);\n    border: 0;\n    border-radius: 4px;\n    box-sizing: border-box;\n    padding: 12px 20px;\n    color: rgba(0, 0, 0, 0.6);\n    font-family: inherit;\n    font-size: inherit;\n    font-weight: 500;\n    line-height: inherit;\n    transition: 0.3s ease;\n    height: 6rem;\n`\n\nexport const InputButton = styled.button`\n    outline: none;\n    background: #4285F4;\n    width: 100%;\n    border: 0;\n    border-radius: 4px;\n    padding: 12px 20px;\n    color: #FFFFFF;\n    font-family: inherit;\n    font-size: inherit;\n    font-weight: 500;\n    line-height: inherit;\n    text-transform: uppercase;\n    cursor: pointer;\n`\n\nexport const LineButton = styled.button`\n    background: none;\n    border: none;\n    color: #999;\n    text-decoration: underline;\n    font-size: inherit;\n    font-weight: 500;\n    line-height: inherit;\n    text-transform: uppercase;\n    cursor: pointer;\n    margin: 20px 10px 5px;\n    text-align: center;\n    display: inline-block;\n`\n\nexport const WhiteLink = styled.a.attrs({ type: 'button' })`\n    width: 100%;\n    background: none;\n    border: none;\n    color: #fff;\n    font-size: inherit;\n    font-weight: 100;\n    line-height: inherit;\n    cursor: pointer;\n    margin: 20px 10px 5px;\n    text-align: center;\n    display: inline;\n`","export const stripSpaces = string => string.trim().split(' ').join('');\nexport const confirmPopUp = message => window.confirm(message);\nexport const validatePassword = password => {\n    const upper = /[A-Z]/;\n    const lower = /[a-z]/;\n    const numbers = /[0-9]/;\n    const special = /[ !@#$%^&*()_+\\-=\\[\\]{};':\"\\\\|,.<>\\/?]/;\n    const space = /\\s/g;\n\n    const valid = (!space.test(password) && upper.test(password) && lower.test(password) && numbers.test(password) && special.test(password) && password.length > 7) ? true : false\n\n    return valid\n\n}\nexport const validateEmail = email => {\n    var validate = /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    return validate.test(email);\n}","export const editingComment = (id, description) => ({\n    type: 'EDITING_COMMENT',\n    id,\n    description\n})\n\nexport const updateComment = () => ({\n    type: 'UPDATE_COMMENT'\n    \n})\n\nexport const deleteComment = id => ({\n    type: 'DELETE_COMMENT',\n    id\n})\n\nexport const typeComment = editingComment => ({\n    type: 'INPUT_EDITING_COMMENT',\n    editingComment: editingComment.target.value\n})","import React from 'react'\nimport axios from 'axios'\nimport PropTypes from 'prop-types'\nimport styled from 'styled-components'\nimport { connect } from 'react-redux';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport {\n  InputGroup,\n  InputButton,\n  InputTextarea\n} from '../../../utils/Input'\nimport { confirmPopUp } from '../../../utils/globalFunc'\nimport { editingComment, typeComment, updateComment, deleteComment } from './actions'\n\nconst CommentContainer = styled.summary`\n  width: 100%;\n  border-bottom: 1px solid #eee;\n  padding: 1rem 0;\n  display:flex;\n  flex-wrap:wrap;\n  margin-top: 2rem;\n`;\n\nconst ContentContainer = styled.div`\n    font-size: 1.25rem;\n    width: 100%;\n    margin-bottom: 1rem;\n    background: #f8f8f8;\n    padding: 15px;\n    border-radius: .5rem;\n`;\n\nconst AuthorContainer = styled.aside`\n  display:flex;\n  align-items:center;\n  justify-content: flex-end;\n  text-align: right;\n  width: 50%;\n  font-size: .875rem;\n  color: rgba(0,0,0,0.6);\n`;\n\nconst IconContainer = styled.aside`\n  display:flex;\n  align-items:center;\n  text-align: left;\n  width: 50%;\n`;\n\nconst UpdateContentContainer = styled.div`\n  width: 100%;\n  padding: 1rem;\n  box-shadow: 0 0 8px 2px rgba(65,64,66,.1);\n  margin-bottom: 1rem;\n`;\n\nconst Icon = styled.span`\n  cursor: pointer;\n  color: #4285F4;\n  padding: .375rem .75rem;\n  border-radius: 100px;\n  border: 1px solid;\n  margin-right: 1rem;\n  text-decoration: none;\n  font-size: 0.875rem;\n\n  &:hover {\n    color:#fff;\n    background-color: #4285F4;\n  }\n`;\n\nconst deleteThisComment = (id, deleteComment) => {\n  if (confirmPopUp(\"Want to delete?\")) {\n    axios.delete(`/api/user-comments/${id}`)\n    deleteComment(id)\n  }\n}\n\nconst updateThisComment = (editingCommentId, editingComment, updateComment) => {\n  axios.put('/api/user-comments/edit', {\n    id: editingCommentId,\n    description: editingComment\n  }).then(updateComment)\n}\n\nconst EditComment = ({ typeComment, editingComment, editingCommentId, updateComment }) => (\n  <UpdateContentContainer>\n    <InputGroup>\n      <InputTextarea onChange={(e) => typeComment(e)} value={editingComment}></InputTextarea>\n    </InputGroup>\n    <InputGroup>\n      <InputButton type=\"button\" onClick={() => updateThisComment(editingCommentId, editingComment, updateComment)}>Update</InputButton>\n    </InputGroup>\n  </UpdateContentContainer>\n)\n\n// EditComment.propTypes = {\n//   handleChange: PropTypes.func.isRequired,\n//   editingComment: PropTypes.string.isRequired,\n//   updateTodo: PropTypes.func.isRequired\n// }\n\nconst Comment = props => {\n  const { deleteComment, updateComment, description, id, userPosted, profileImg, editing, editingComment, editingCommentId, loggedIn, userRole, typeComment, editThisComment } = props\n  \n  return (\n    <CommentContainer key={description}>\n      {\n        editing && editingCommentId === id ? (\n          <EditComment updateComment={updateComment} typeComment={typeComment} editingComment={editingComment} editingCommentId={editingCommentId} />\n        ) : (\n          <ContentContainer>{description}</ContentContainer>\n        )\n      }\n      <IconContainer>\n      {\n          (loggedIn || userRole === 'administrator' ) && !editing  ? (\n          <React.Fragment>\n            <Icon onClick={() => deleteThisComment(id, deleteComment)}><FontAwesomeIcon prefix=\"far\" icon=\"trash-alt\" /> delete</Icon>\n            <Icon onClick={() => editThisComment(id, description)}><FontAwesomeIcon prefix=\"fas\" icon=\"edit\" /> edit</Icon>\n          </React.Fragment>\n      ) : ('')\n    }\n      </IconContainer>\n      <AuthorContainer>\n        {profileImg && <img width=\"32\" style={{ 'borderRadius': '100%' }} src={profileImg} />}\n        &nbsp;&nbsp;By {userPosted}\n      </AuthorContainer>\n    </CommentContainer>\n  )\n}\n\nComment.propTypes = {\n  id: PropTypes.string.isRequired,\n  description: PropTypes.string.isRequired,\n  userPosted: PropTypes.string.isRequired\n}\n\nconst mapStateToProps = state => ({ \n  editing: state.user.editing,\n  editingComment: state.user.editingComment,\n  editingCommentId: state.user.editingCommentId,\n  loggedIn: state.user.loggedIn,\n  userRole: state.user.userRole\n})\n//this method is used to pass state down functions\n\nconst mapDispatchToProps = dispatch => ({ //this method is used to pass function down functions\n  editThisComment: (id, description) => dispatch(editingComment(id, description)),\n  typeComment: editingComment => dispatch(typeComment(editingComment)),\n  updateComment: () => dispatch(updateComment()),\n  deleteComment: id => dispatch(deleteComment(id))\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Comment)\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components'\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport LinearProgress from '@material-ui/core/LinearProgress';\r\n\r\nconst styles = {\r\n    root: {\r\n        flexGrow: 1,\r\n    },\r\n};\r\n\r\nconst LoaderContainer = styled.div`\r\n    position: fixed;\r\n    height: 100%;\r\n    width: 100%;\r\n    top: 0;\r\n    left: 0;\r\n    bottom: 0;\r\n    right: 0;\r\n    background: #fff;\r\n    display: flex;\r\n    align-items: center;\r\n`\r\n\r\nconst LinearIndeterminate = props => {\r\n    const { classes, loaded } = props;\r\n    if (!loaded) {\r\n        return (\r\n            <LoaderContainer>\r\n                <div className={classes.root}>\r\n                    <LinearProgress />\r\n                </div>\r\n            </LoaderContainer>\r\n        );\r\n    }\r\n    return null\r\n}\r\n\r\nLinearIndeterminate.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(LinearIndeterminate);","export const loadComments = allComments => {\n    return {\n        type: 'LOAD_COMMENTS',\n        allComments\n    }\n}","import React, { Component } from 'react'\nimport axios from 'axios'\nimport Comment from '../Comment'\nimport { LineButton } from '../../../utils/Input'\nimport { connect } from 'react-redux';\nimport { loadComments } from './actions';\nimport { startLoading, finishLoading, setError, clearError } from '../../../controllers/Actions'\n\nclass ShowComments extends Component {\n\n  constructor(props) {\n    super(props)\n\n    this.allComments = props.allComments\n    this.userRole = props.userRole\n    this.loadingStart = props.loadingStart\n    this.loadingEnd = props.loadingEnd\n    this.loadComments = props.loadComments\n    this.loggedInAs = props.loggedInAs\n    this.loggedIn = props.loggedIn\n    this.token = props.token\n    this.clearError = props.clearError\n    this.setError = props.setError\n    this.loaded = props.loaded\n  }\n\n  state = {\n    displayComments: 5\n  }\n\n  loadAllComments = () => {\n    this.loadingStart();\n\n    axios.get('/api/all-comments').then(async res => {\n      if (res.data.payload && res.status === 200) {\n        this.allComments = res.data.payload\n        await this.loadComments(res.data.payload)\n        \n        this.loadingEnd();\n      }\n      else {\n        this.setError('Server Error')\n        this.loadingEnd()\n      }\n    })\n  }\n\n  loadUserComments = () => {\n    this.loadingStart();\n\n    axios.post('/api/user-comments', {}, {\n      headers: { 'Authorization': 'bearer ' + this.token }\n    }).then(async res => {\n      if (res.data.payload && res.status === 200) {\n        this.allComments = res.data.payload\n        await this.loadComments(res.data.payload)\n\n        this.loadingEnd();\n      }\n      else {\n        this.setError('Server Error')\n        this.loadingEnd()\n      }\n    })\n  }\n\n  componentDidMount() {\n    if (!window.sessionStorage['token']) {\n      this.loadAllComments()\n    }\n    if(this.loggedIn) {\n      this.loadUserComments()\n    }\n  }\n\n  componentWillReceiveProps(nextProps) {\n    \n    this.allComments = nextProps.allComments\n    this.loggedIn = nextProps.loggedIn\n    this.userRole = nextProps.userRole\n    this.loggedInAs = nextProps.loggedInAs\n    this.token = nextProps.token\n    this.loaded = nextProps.loaded\n\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        {this.allComments.slice(0, this.state.displayComments).map(comment => (\n          <Comment\n            description={comment.description}\n            profileImg={comment.userId.profileImg ? comment.userId.profileImg : ''}\n            id={comment._id}\n            key={comment._id}\n            userPosted={comment.userId.username}\n          />\n        ))}\n        {this.state.displayComments >= this.allComments.length ? '' : <LineButton style={{ \"display\": \"block\", \"margin\": \"20px auto 5px\"}} onClick={() => {\n          this.setState({\n            displayComments: this.state.displayComments + 5\n          })\n        }}>Load More</LineButton>}\n      </React.Fragment>\n    )\n  }\n}\n\n\nconst mapStateToProps = state => ({ ...state.user, ...state.loading})\n\nconst mapDispatchToProps = dispatch => ({ //this method is used to pass function down functions\n  loadComments: allComments => dispatch(loadComments(allComments)),\n  loadingStart: () => dispatch(startLoading()),\n  loadingEnd: () => dispatch(finishLoading()),\n  setError: errorMessage => dispatch(setError(errorMessage)),\n  clearError: () => dispatch(clearError())\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ShowComments)\n","export const login = userData => ({\n    type: 'USER_LOGIN',\n    userData\n})\n\nexport const logout = () => ({\n    type: 'USER_LOGOUT'\n})\n\nexport const typeUsername = username => ({\n    type: 'INPUT_USERNAME',\n    username: username.target.value\n})\n\nexport const typePassword = password => ({\n    type: 'INPUT_PASSWORD',\n    password: password.target.value\n})\n\nexport const typeConfirmPassword = rePassword => ({\n    type: 'INPUT_CONFIRM_PASSWORD',\n    rePassword: rePassword.target.value\n})\n\nexport const typeEmail = email => ({\n    type: 'INPUT_EMAIL',\n    email: email.target.value\n})\n\nexport const chooseProfile = profileImg => ({\n    type: 'INPUT_PROFILE_IMAGE',\n    profileImg\n})\n\nexport const setRegistering = bool => ({\n    type: 'SET_REGISTERING',\n    registering: bool\n})\n\nexport const setForgetPass = bool => ({\n    type: 'SET_FORGETPASS',\n    forgetPass: bool\n})","import React, { Component } from 'react'\r\nimport axios from 'axios'\r\nimport styled from 'styled-components'\r\nimport Router from 'next/router'\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport Loader from '../Loader';\r\nimport {\r\n    InputGroup,\r\n    InputLabel,\r\n    InputField,\r\n    InputButton,\r\n    LineButton\r\n} from '../../../utils/Input'\r\nimport { connect } from 'react-redux';\r\nimport {\r\n    login,\r\n    logout,\r\n    typeUsername,\r\n    typePassword,\r\n    typeConfirmPassword,\r\n    typeEmail,\r\n    chooseProfile,\r\n    setRegistering,\r\n    setForgetPass\r\n} from './actions'\r\nimport { loadComments } from '../ShowComment/actions';\r\nimport { setError, startLoading, finishLoading, clearError, clearInput } from '../../../controllers/Actions'\r\nimport { stripSpaces, validatePassword, validateEmail } from '../../../utils/globalFunc'\r\n\r\nconst UserLogin = styled.div`\r\n  width: 100%;\r\n  max-width: 450px;\r\n  margin: 40px auto 0;\r\n`;\r\n\r\nconst RadioOption = styled.span`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  flex-wrap:wrap;\r\n  align-items: center;\r\n\r\n  [type=\"radio\"] {\r\n      margin-top: .5rem;\r\n  }\r\n\r\n  img {\r\n      width: 48px;\r\n  }\r\n`;\r\n\r\nconst ErrorMessage = styled.div`\r\n  color: #D31C1D;\r\n  text-align: center;\r\n  font-size: .875rem;\r\n`;\r\n\r\nconst StyledFormGroup = styled(FormGroup)`\r\n    label > span {\r\n        font-weight: 500;\r\n        line-height: 1;\r\n        text-transform: uppercase;\r\n        letter-spacing: .2em;\r\n        color: rgba(0,0,0,0.6);\r\n        font-size: 12px;\r\n    }\r\n`\r\n\r\nclass UserForm extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        //function\r\n        this.login = props.login\r\n        this.logout = props.logout\r\n        this.clearInput = props.clearInput\r\n        this.setError = props.setError\r\n        this.clearError = props.clearError\r\n        this.loadingStart = props.loadingStart\r\n        this.loadingEnd = props.loadingEnd\r\n        this.typeUsername = props.typeUsername\r\n        this.typePassword = props.typePassword\r\n        this.typeConfirmPassword = props.typeConfirmPassword\r\n        this.typeEmail = props.typeEmail\r\n        this.chooseProfile = props.chooseProfile\r\n        this.setRegistering = props.setRegistering\r\n        this.setForgetPass = props.setForgetPass\r\n        this.loadComments = props.loadComments\r\n\r\n        //data\r\n        this.forgetPass = props.forgetPass\r\n        this.registering = props.registering\r\n        this.username = props.username\r\n        this.email = props.email\r\n        this.password = props.password\r\n        this.rePassword = props.rePassword\r\n        // this.token = props.token\r\n        this.profileImg = props.profileImg\r\n        this.loggedInAs = props.loggedInAs\r\n        this.loggedIn = props.loggedIn\r\n        this.userRole = props.userRole\r\n        this.loaded = props.loaded\r\n        this.errorMessage = props.errorMessage\r\n\r\n    }\r\n\r\n    state = {\r\n        customProfile: false\r\n    }\r\n\r\n    sessionLogin = () => {\r\n        this.loadingStart();\r\n        const token = window.sessionStorage['token']\r\n        axios.post('/api/login/sso', {}, {\r\n            headers: { 'Authorization': 'bearer ' + token }\r\n        }).then(async res => {\r\n            if (res.status === 200) {\r\n                const { _id, profileImg, role, username } = res.data.user\r\n                await this.login({\r\n                    username,\r\n                    loggedInAs: _id,\r\n                    token,\r\n                    profileImg,\r\n                    userRole: role\r\n                })\r\n                await this.loadAllComments()\r\n                await this.clearInput()\r\n                await role === 'administrator' ? Router.push('/admin', `/admin/${_id}`) : Router.push(`/user`, `/user/${_id}`)\r\n            } else {\r\n                this.setError(res.data.message)\r\n                this.loadingEnd()\r\n            }\r\n        })\r\n    }\r\n\r\n    userLogin = e => {\r\n        e.preventDefault();\r\n        this.loadingStart();\r\n        axios.post('/api/login', {\r\n            username: stripSpaces(this.username),\r\n            password: stripSpaces(this.password)\r\n        }).then(async res => {\r\n            if (res.status === 200) {\r\n                const { _id, profileImg, role, username } = res.data.user\r\n                window.sessionStorage.setItem('token', res.data.token);\r\n                await this.login({\r\n                    username,\r\n                    loggedInAs: _id,\r\n                    token: res.data.token,\r\n                    profileImg,\r\n                    userRole: role\r\n                })\r\n                this.loadAllComments()\r\n                this.clearInput()\r\n                this.clearError()\r\n                role === 'administrator' ? Router.push('/admin', `/admin/${_id}`) : Router.push(`/user`, `/user/${_id}`)\r\n            } else {\r\n                this.setError(res.data.message)\r\n            }\r\n        })\r\n    }\r\n\r\n    createNewUser = e => {\r\n        e.preventDefault()\r\n        if (this.password !== this.rePassword) {\r\n            this.setError(`You passwords don't match`)\r\n            return null\r\n        }\r\n        if (!validatePassword(this.password)) {\r\n            this.setError(`Please make sure your password has uppercase, lowercase letter, number, special character and no space.`)\r\n            return null\r\n        }\r\n        if (!validateEmail(this.email)) {\r\n            this.setError(`this email address ${this.email} is not valid.`)\r\n            return null\r\n        }\r\n        this.loadingStart()\r\n\r\n        // upload profile image\r\n        if (this.state.customProfile) {\r\n            const data = new FormData();\r\n            data.append('file', this.profileImg[0])\r\n            data.append('upload_preset', 'user_profile')\r\n\r\n            axios.post('https://api.cloudinary.com/v1_1/fwgs210/image/upload', data)\r\n                .then(res => {\r\n                    if (res.status === 200) {\r\n                        this.chooseProfile(res.data.secure_url)\r\n                        this.registerUser()\r\n                    } else {\r\n                        this.setError('Fail to upload your image.')\r\n                        this.loadingEnd()\r\n                        return null\r\n                    }\r\n                }).catch(err => console.log(err))\r\n        } else {\r\n            this.registerUser()\r\n        }\r\n    }\r\n\r\n    registerUser = () => {\r\n        axios.post('/api/newuser', {\r\n            username: stripSpaces(this.username),\r\n            email: stripSpaces(this.email),\r\n            password: stripSpaces(this.password),\r\n            profileImg: this.profileImg\r\n        }).then(async res => {\r\n            if (res.status === 200) {\r\n                const { _id, role, profileImg } = res.data.user\r\n                await this.login({\r\n                    loggedInAs: _id,\r\n                    token: res.data.token,\r\n                    profileImg,\r\n                    userRole: role\r\n                })\r\n                await this.loadAllComments()\r\n                await window.sessionStorage.setItem('token', res.data.token);\r\n                await this.clearInput()\r\n                await this.clearError()\r\n                await Router.push(`/userdashboard?userId=${_id}`, `/user/${_id}`)\r\n            } else {\r\n                this.setError(res.data.message)\r\n                this.loadingEnd()\r\n            }\r\n        })\r\n    }\r\n\r\n    forgetPassRequest = e => {\r\n        e.preventDefault()\r\n        this.loadingStart()\r\n        axios.post('/api/retrieve-user-info', {\r\n            email: stripSpaces(this.email)\r\n        }).then(res => {\r\n            if (res.status === 200) {\r\n                this.setError(res.data.message)\r\n                this.clearInput()\r\n                this.loadingEnd()\r\n            }\r\n            if (res.status === 203) {\r\n                this.setError(res.data.message)\r\n                this.loadingEnd()\r\n            }\r\n        })\r\n    }\r\n\r\n    loadAllComments = () => {\r\n        this.loadingStart();\r\n        axios.get('/api/all-comments').then(async res => {\r\n            if (res.data.payload && res.status === 200) {\r\n                await this.loadComments(res.data.payload)\r\n            }\r\n            else {\r\n                this.setError('Server Error')\r\n                this.loadingEnd()\r\n            }\r\n        })       \r\n    }\r\n\r\n    uploadFile = e => this.chooseProfile(e.target.files)\r\n\r\n    componentDidMount() {\r\n        if (window.sessionStorage['token']) {\r\n            this.sessionLogin()\r\n        } else {\r\n            this.loadingEnd()\r\n        }\r\n    }\r\n    \r\n\r\n    componentWillReceiveProps(nextProps) {\r\n\r\n        this.forgetPass = nextProps.forgetPass\r\n        this.registering = nextProps.registering\r\n        this.username = nextProps.username\r\n        this.email = nextProps.email\r\n        this.password = nextProps.password\r\n        this.rePassword = nextProps.rePassword\r\n        // this.token = nextProps.token\r\n        this.profileImg = nextProps.profileImg\r\n        this.loggedInAs = nextProps.loggedInAs\r\n        this.loggedIn = nextProps.loggedIn \r\n        this.userRole = nextProps.userRole\r\n        this.loaded = nextProps.loaded\r\n        this.errorMessage = nextProps.errorMessage\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        if (this.registering) {\r\n            return (\r\n                <React.Fragment>\r\n                    <UserLogin>\r\n                        <form onSubmit={e => this.createNewUser(e)}>\r\n                            <StyledFormGroup row>\r\n                                <FormControlLabel\r\n                                    control={\r\n                                        <Switch\r\n                                            checked={this.state.customProfile}\r\n                                            onChange={(event) => this.setState({ 'customProfile': event.target.checked })}\r\n                                            color=\"primary\"\r\n                                        />\r\n                                    }\r\n                                    label=\"Custom profile picture\"\r\n                                />\r\n                            </StyledFormGroup>\r\n                            {\r\n                                this.state.customProfile ? (\r\n                                    <InputGroup>\r\n                                        <InputField type=\"file\" onChange={this.uploadFile} />\r\n                                    </InputGroup>\r\n                                ) : (\r\n                                <InputGroup style={{'flexDirection': 'row'}}>\r\n                                    <RadioOption><img alt=\"avatar1\" src='https://res.cloudinary.com/fwgs210/image/upload/v1549488926/user_profile/resoxynwrkrn1jvwbpee.png' /><input type=\"radio\" name=\"selectMyAvatar\" onChange={() => this.chooseProfile('https://res.cloudinary.com/fwgs210/image/upload/v1549488926/user_profile/resoxynwrkrn1jvwbpee.png')} /></RadioOption>\r\n                                    <RadioOption><img alt=\"avatar2\" src='https://res.cloudinary.com/fwgs210/image/upload/v1549489254/user_profile/vrahhosrv2davfyigrl9.png' /><input type=\"radio\" name=\"selectMyAvatar\" onChange={() => this.chooseProfile('https://res.cloudinary.com/fwgs210/image/upload/v1549489254/user_profile/vrahhosrv2davfyigrl9.png')} /></RadioOption>\r\n                                    <RadioOption><img alt=\"avatar3\" src='https://res.cloudinary.com/fwgs210/image/upload/v1549489062/user_profile/atkyy6u92kvm3n69kxns.png' /><input type=\"radio\" name=\"selectMyAvatar\" onChange={() => this.chooseProfile('https://res.cloudinary.com/fwgs210/image/upload/v1549489062/user_profile/atkyy6u92kvm3n69kxns.png')} /></RadioOption>\r\n                                    <RadioOption><img alt=\"avatar4\" src='https://res.cloudinary.com/fwgs210/image/upload/v1549489268/user_profile/oi25fck46ihcur6qeflm.png' /><input type=\"radio\" name=\"selectMyAvatar\" onChange={() => this.chooseProfile('https://res.cloudinary.com/fwgs210/image/upload/v1549489268/user_profile/oi25fck46ihcur6qeflm.png')} /></RadioOption>\r\n                                    <RadioOption><img alt=\"avatar5\" src='https://res.cloudinary.com/fwgs210/image/upload/v1549489251/user_profile/nv0mmscejjfjmchxpjxn.png' /><input type=\"radio\" name=\"selectMyAvatar\" onChange={() => this.chooseProfile('https://res.cloudinary.com/fwgs210/image/upload/v1549489251/user_profile/nv0mmscejjfjmchxpjxn.png')} /></RadioOption>\r\n                                    <RadioOption><img alt=\"avatar6\" src='https://res.cloudinary.com/fwgs210/image/upload/v1549489271/user_profile/gszzb66osbypomnsrbht.png' /><input type=\"radio\" name=\"selectMyAvatar\" onChange={() => this.chooseProfile('https://res.cloudinary.com/fwgs210/image/upload/v1549489271/user_profile/gszzb66osbypomnsrbht.png')} /></RadioOption>\r\n                                </InputGroup>\r\n                                )\r\n                            }\r\n                            <InputGroup>\r\n                                <InputLabel>username</InputLabel>\r\n                                <InputField value={this.username} onChange={this.typeUsername} type=\"text\" required />\r\n                            </InputGroup>\r\n                            <InputGroup>\r\n                                <InputLabel>email</InputLabel>\r\n                                <InputField value={this.email} onChange={this.typeEmail} type=\"email\" required />\r\n                            </InputGroup>\r\n                            <InputGroup>\r\n                                <InputLabel>password</InputLabel>\r\n                                <InputField value={this.password} onChange={this.typePassword} type=\"password\" required />\r\n                            </InputGroup>\r\n                            <InputGroup>\r\n                                <InputLabel>Re-type password</InputLabel>\r\n                                <InputField value={this.rePassword} onChange={this.typeConfirmPassword} type=\"password\" required />\r\n                            </InputGroup>\r\n                            <InputGroup>\r\n                                <InputButton type=\"submit\">Register</InputButton>\r\n                                <LineButton onClick={() => this.setRegistering(false)}>Login</LineButton>\r\n                            </InputGroup>\r\n                        </form>\r\n                    </UserLogin>\r\n                    <ErrorMessage>{this.errorMessage}</ErrorMessage>\r\n                    <Loader loaded={this.loaded} />\r\n                </React.Fragment>\r\n            )\r\n        }\r\n\r\n        if (this.forgetPass) {\r\n            return (\r\n                <React.Fragment>\r\n                    <UserLogin>\r\n                        <form onSubmit={(e) => this.forgetPassRequest(e)}>\r\n                            <InputGroup>\r\n                                <InputLabel>email</InputLabel>\r\n                                <InputField value={this.email} onChange={this.typeEmail} type=\"email\" required />\r\n                            </InputGroup>\r\n                            <InputGroup>\r\n                                <InputButton type=\"submit\">Submit</InputButton>\r\n                                <LineButton onClick={() => this.setForgetPass(false)}>Login</LineButton>\r\n                            </InputGroup>\r\n                        </form>\r\n                    </UserLogin>\r\n                    <ErrorMessage>{this.errorMessage}</ErrorMessage>\r\n                    <Loader loaded={this.loaded} />\r\n                </React.Fragment>            \r\n            )\r\n        }\r\n\r\n        if(!this.loggedIn) {\r\n            return (\r\n                <React.Fragment>\r\n                    <UserLogin>\r\n                        <form onSubmit={e => this.userLogin(e)}>\r\n                            <InputGroup>\r\n                                <InputLabel>username</InputLabel>\r\n                                <InputField value={this.username} onChange={this.typeUsername} type=\"text\" required />\r\n                            </InputGroup>\r\n                            <InputGroup>\r\n                                <InputLabel>password</InputLabel>\r\n                                <InputField value={this.password} onChange={this.typePassword} type=\"password\" required />\r\n                            </InputGroup>\r\n                            <InputGroup>\r\n                                <InputButton type=\"submit\">login</InputButton>\r\n                                <LineButton onClick={() => this.setRegistering(true)}>Register here</LineButton>\r\n                                <LineButton onClick={() => this.setForgetPass(true)}>forgot password?</LineButton>\r\n                            </InputGroup>\r\n                        </form>\r\n                    </UserLogin>\r\n                    <ErrorMessage>{this.errorMessage}</ErrorMessage>\r\n                    <Loader loaded={this.loaded} />\r\n                </React.Fragment>\r\n            )\r\n        }\r\n\r\n        return <Loader loaded={this.loaded} />\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({ ...state.user, ...state.loading })\r\n//this method is used to pass state down functions\r\n\r\nconst mapDispatchToProps = dispatch => ({ //this method is used to pass function down functions\r\n    login: userData => dispatch(login(userData)),\r\n    logout: () => dispatch(logout()),\r\n    loadComments: allComments => dispatch(loadComments(allComments)),\r\n    typeUsername: username => dispatch(typeUsername(username)),\r\n    typePassword: password => dispatch(typePassword(password)),\r\n    typeConfirmPassword: rePassword => dispatch(typeConfirmPassword(rePassword)),\r\n    typeEmail: email => dispatch(typeEmail(email)),\r\n    chooseProfile: profileImg => dispatch(chooseProfile(profileImg)),\r\n    clearInput: () => dispatch(clearInput()),\r\n    setError: errorMessage => dispatch(setError(errorMessage)),\r\n    clearError: () => dispatch(clearError()),\r\n    loadingStart: () => dispatch(startLoading()),\r\n    loadingEnd: () => dispatch(finishLoading()),\r\n    setRegistering: bool => dispatch(setRegistering(bool)), \r\n    setForgetPass: bool => dispatch(setForgetPass(bool))\r\n})\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(UserForm)","import React from 'react'\nimport ShowComments from '../components/ShowComment'\nimport UserForm from '../components/UserForm'\n\n\nconst Home = () => (\n    <React.Fragment>\n        <ShowComments />\n        <UserForm />\n    </React.Fragment>\n)\n\n\nexport default Home\n","module.exports = require(\"@babel/runtime/regenerator\");","module.exports = require(\"@fortawesome/react-fontawesome\");","module.exports = require(\"@material-ui/core/FormControlLabel\");","module.exports = require(\"@material-ui/core/FormGroup\");","module.exports = require(\"@material-ui/core/LinearProgress\");","module.exports = require(\"@material-ui/core/Switch\");","module.exports = require(\"@material-ui/core/styles\");","module.exports = require(\"axios\");","module.exports = require(\"next/router\");","module.exports = require(\"prop-types\");","module.exports = require(\"react\");","module.exports = require(\"react-redux\");","module.exports = require(\"styled-components\");"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;ACxFA;AAEA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFA;;;;;;;;;;;;ACFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAIA;AAAA;AACA;AADA;AAAA;AAIA;AAAA;AACA;AACA;AAFA;AAAA;AAKA;AAAA;AACA;AADA;AAAA;AAIA;AAAA;AACA;AACA;AAFA;AAAA;AAKA;AAAA;AACA;AADA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACtBA;AAEA;AASA;AAYA;AAiBA;AAkBA;AAgBA;AAeA;AAAA;AAAA;;;;;;;;;;;;ACzFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACjBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AAAA;AAMA;AAAA;AACA;AADA;AAAA;AAKA;AAAA;AACA;AACA;AAFA;AAAA;AAKA;AAAA;AACA;AACA;AAFA;AAAA;;;;;;;;;;;;;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","sourceRoot":""}